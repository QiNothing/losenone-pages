name: Build and deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get Yarn Cache Directory Path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore Yarn Chche
        uses: actions/cache@v1
        # Check for cache hit using steps.yarn-cache.outputs.cache-hit
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('./yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Build
        run: yarn pages:build

      - name: Package
        run: cd ./pages/.vuepress/dist && tar -czvf dist.tar.gz *

      - name: Deploy
        uses: mdallasanta/ssh-scp-deploy@v1.0.4
        with:
          local: "./pages/.vuepress/dist/dist.tar.gz"
          remote: "/data/wwwroot/www.losenone.cn"
          host: ${{secrets.PROD_HOST}}
          port: ${{secrets.PROD_PORT}}
          user: ${{secrets.PROD_USER}}
          key: ${{secrets.PROD_KEY}}
          pre_upload: cd /data/wwwroot/www.losenone.cn && rm -rf *
          post_upload: cd /data/wwwroot/www.losenone.cn && tar -xzvf dist.tar.gz && rm -f dist.tar.gz
          ssh_options: -o StrictHostKeyChecking=no
          scp_options: -v -r
